---
// Props interface for type safety and component flexibility
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'lg';
  href?: string;
  class?: string;
  type?: 'button' | 'submit' | 'reset';
}

// Destructure props with sensible defaults
const { variant = 'primary', size = 'lg', href, class: className = '', type = 'button', ...rest } = Astro.props;

// Base styles shared across all button variants for consistency
const baseStyles = 'inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50';

// Variant-specific styling with proper contrast and accessibility
const variantStyles = {
  primary: 'bg-violet-600 hover:bg-violet-700 text-white focus:ring-violet-500 ',
  secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',
  outline: 'border border-violet-600 bg-white text-violet-600 hover:bg-violet-600 hover:text-white focus:ring-violet-500'
};

// Size-specific padding and text sizing for responsive design
const sizeStyles = {
  sm: 'px-3 py-2 text-sm',
  lg: 'px-6 py-3 text-base'
};

// Combine all styles into final class string
const buttonClasses = `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className}`;
---

<!-- 
  Conditional rendering based on href prop:
  - href present: renders <a> tag for navigation (semantic HTML)
  - href absent: renders <button> tag for actions/interactions
  This ensures proper accessibility and semantic meaning
-->
{href ? (
  <!-- Link variant: Uses anchor tag with href for navigation -->
  <a href={href} class={buttonClasses} tabindex="0" {...rest}>
    <slot />
  </a>
) : (
  <!-- Button variant: Uses button tag for interactions -->
  <button type={type} class={buttonClasses} tabindex="0" {...rest}>
    <slot />
  </button>
)}

<!-- 
  Slot implementation allows flexible content injection:
  - Simple text: <Button>Click me</Button>
  - Icons + text: <Button><Icon />Submit</Button>
  - Complex markup: <Button><span>Custom</span> content</Button>
-->
