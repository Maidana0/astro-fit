---
import Button from '../ui/Button.astro';
---

<!-- 
  Contact Page
  - Static HTML form with no client-side JavaScript
  - Form submission handled by external service (Netlify Forms, etc.)
  - Accessible form design with proper labels and semantic structure
-->
<section
  class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 pt-16 pb-20"
  id="contacto"
>
  <!-- Page header with contact information -->
  <div class="text-center mb-12">
    <h2 class="text-4xl font-bold text-gray-900 mb-4">Contáctanos</h2>
    <p class="text-lg text-gray-600 max-w-2xl mx-auto mb-8">
      ¿Listo para transformar tu cuerpo? Envíanos un mensaje y te contactaremos
      pronto.
    </p>

    <!-- Contact information placeholders -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
      <div class="text-center">
        <h3 class="font-semibold text-gray-900 mb-2">Celular</h3>
        <p class="text-gray-600">(+54 9 11) 1234-5678</p>
      </div>
      <div class="text-center">
        <h3 class="font-semibold text-gray-900 mb-2">Email</h3>
        <p class="text-gray-600">info@astrofit.com</p>
      </div>
      <div class="text-center">
        <h3 class="font-semibold text-gray-900 mb-2">Ubicación</h3>
        <p class="text-gray-600">123 Fitness St, Ciudad, Estado</p>
      </div>
    </div>
  </div>

  <!-- 
        Contact Form - Pure HTML with Tailwind styling
        - No client-side JavaScript or framework components
        - Form submission handled by external service (Netlify Forms, serverless function)
        - Accessible design with proper labels and semantic structure
      -->
  <div class="max-w-2xl mx-auto">
    <!-- <form class="space-y-6" method="POST" action="/contact" netlify> -->
    <form class="space-y-6" id="contact-form">
      <!-- Name field with proper label association -->
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
          Full Name
        </label>
        <input
          type="text"
          id="name"
          name="name"
          required
          class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
          placeholder="Enter your full name"
        />
      </div>

      <!-- Email field with validation -->
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
          Email Address
        </label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
          placeholder="Enter your email address"
        />
      </div>

      <!-- Message textarea with proper sizing -->
      <div>
        <label
          for="message"
          class="block text-sm font-medium text-gray-700 mb-2"
        >
          Message
        </label>
        <textarea
          id="message"
          name="message"
          rows="5"
          required
          class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-vertical"
          placeholder="Tell us about your fitness goals and how we can help"
        ></textarea>
      </div>

      <!-- Submit button with consistent styling -->
      <div>
        <Button
          variant={'primary'}
          class={'w-full font-medium cursor-pointer'}
          type="submit"
        >
          Enviar mensaje
        </Button>
      </div>
    </form>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form: HTMLFormElement = document.getElementById(
      'contact-form'
    ) as HTMLFormElement;
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      alert('Formulario no enviado. Gracias por contactarnos.');
      form.reset();
    });
  });
</script>

<!-- 
  Form Implementation Notes:
  - Pure HTML form with no client-side JavaScript required
  - Netlify Forms attribute enables automatic form handling
  - Alternative: serverless function (Vercel, Netlify Functions) for custom processing
  - Form validation handled by browser's native HTML5 validation
  - Accessible design with proper label-input associations
  - Focus states and transitions provide good UX feedback
-->
